$route.path

字符串，等于当前路由对象的路径，会被解析为绝对路径，如 "/foo/bar"

router.map({
  '/user/:userId': {
    name: 'user', // 给这条路径加上一个名字
    component: { ... }
  }
})

<a v-link="{ name: 'user', params: { userId: 123 }}">User</a>
router.go({ name: 'user', params: { userId: 123 }})
以上两种情况，路由都会最终切换到 /user/123

//////////////////////////////
在vue中新增ready对象，当页面加载完成时就去请求


replace

一个带有 replace: true 的链接被点击时将会触发 router.replace() 而不是 router.go()。由此产生的跳转不会留下历史记录

append
带有 append: true 选项的相对路径链接会确保该相对路径始终添加到当前路径之后。
举例来说，从 /a 跳转到相对路径 b 时，如果没有 append: true 我们会跳转到 /b，但有 append: true 则会跳转到 /a/b

每个切换钩子函数都会接受一个 transition(过渡) 对象作为参数。这个切换对象包含以下函数和方法
transition.to
一个代表将要切换到的路径的路由对象。
transition.from
一个代表当前路径的路由对象。
transition.next()
调用此函数处理切换过程的下一步。
transition.abort([reason])
调用此函数来终止或者拒绝此次切换。
transition.redirect(path)
取消当前切换并重定向到另一个路由。






























